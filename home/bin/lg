#!/bin/bash
#------------------------------------------------------------------------------------
# lg - a command line logger
# 
# author:       Adam Hayward
# contact:	    adam (at) happy.cat
# since:        2014-10-27
# 
#------------------------------------------------------------------------------------

#------------------------------------------------------------------------------------
# SCRIPT CONFIGURATION
#------------------------------------------------------------------------------------

SCRIPT_NAME=`basename $0`

# If debug information should be shown
VERBOSE=

VERSION=0.1

# Add your own global variables here
LOG_NAME='default'
LOG_DIR=${HOME}/.lg
DATE_FORMAT='%y-%m-%dT%H:%M:%S%z'

#------------------------------------------------------------------------------------
# UTILITY FUNCTIONS
#------------------------------------------------------------------------------------

# print a log a message
log ()
{
    echo "[${SCRIPT_NAME}]: $1" > /dev/stderr
}

# print a debug message - only outputs is VERBOSE flag is set
debug()
{
    [ "$VERBOSE" ] && echo "[${SCRIPT_NAME}]: $1" > /dev/stderr
}

# print an error message and exit()
error()
{
    echo "[${SCRIPT_NAME}] ERROR: $1" > /dev/stderr
    [ $# -gt 1 ] && exit $2
    exit 1
}

# Define your own script functions here

# Print a usage message
usage()
{
cat << USAGE
usage: $0 [-v] [-h] -a op1 -b op2

Short description

REQUIRED OPTIONS:
    -a op1      Option 1
    -b op2      Option 2
OTHER OPTIONS:
    -v         Show debuging messages
    -h         Show this help message
    -V         Show version
USAGE
}

# Get the script options
get_options()
{
    while getopts "a:b:hvV-:" OPTION
    do
        if [ $OPTION == "-" ]; then
            OPTION=$OPTARG
        fi
        case $OPTION in
            a)  OP1=${OPTARG};;
            b)  OP2=${OPTARG};;
            h)  usage && exit 0;;
       'help')  usage && exit 0;;
            V)  echo $VERSION && exit 0;;
    'version')  echo $VERSION && exit 0;;
            v)  VERBOSE=1;;
            \?) echo "Invalid option" && usage && exit 1;;
        esac
    done
}

main()
{
    get_options "$@"
    LOG_FILE=${LOG_DIR}/${LOG_NAME}.log
    if [ ! -d ${LOG_DIR} ]; then
        mkdir -p ${LOG_DIR}
    fi
    
    if [[ "$@" == "" ]]; then
        tail -n 10 ${LOG_FILE}
    else
        echo `date +${DATE_FORMAT}` $@ >> ${LOG_FILE}
    fi
    # Put the rest of your main script here
}

main "$@"

